<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fun</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://valentj.github.io/"/>
  <updated>2019-12-29T08:37:24.292Z</updated>
  <id>https://valentj.github.io/</id>
  
  <author>
    <name>Valent</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo功能合集</title>
    <link href="https://valentj.github.io/2019/12/29/Hexo%E5%8A%9F%E8%83%BD/"/>
    <id>https://valentj.github.io/2019/12/29/Hexo%E5%8A%9F%E8%83%BD/</id>
    <published>2019-12-29T08:31:31.000Z</published>
    <updated>2019-12-29T08:37:24.292Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">            <p>Heox种种功能<br>持续更新</p>          </div><a id="more"></a><h1 id="hexo默认文章模板修改"><a href="#hexo默认文章模板修改" class="headerlink" title="hexo默认文章模板修改"></a>hexo默认文章模板修改</h1><p>直接修改/scaffolds/post.md,加入你想要的东西即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">---</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">date: &#123;&#123; date &#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">mathjax: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">copyright: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">comment: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">tags:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">categories:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">photo:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">password:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">---</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;Heox种种功能&lt;br&gt;持续更新&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Linux学习（二）</title>
    <link href="https://valentj.github.io/2019/12/29/Linux%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://valentj.github.io/2019/12/29/Linux%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2019-12-29T07:51:51.000Z</published>
    <updated>2019-12-29T08:38:18.271Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">            <p>lamp环境搭建<br>使用的是centos7系统  </p>          </div><a id="more"></a><h1 id="安装Apache-amp-Nginx"><a href="#安装Apache-amp-Nginx" class="headerlink" title="安装Apache&amp;Nginx"></a>安装Apache&amp;Nginx</h1><h2 id="升级一下yum源-非必须"><a href="#升级一下yum源-非必须" class="headerlink" title="升级一下yum源(非必须)"></a>升级一下yum源(非必须)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">yum update</span></pre></td></tr></table></figure><h2 id="Apache安装与配置"><a href="#Apache安装与配置" class="headerlink" title="Apache安装与配置"></a>Apache安装与配置</h2><h3 id="Apache下载安装"><a href="#Apache下载安装" class="headerlink" title="Apache下载安装"></a>Apache下载安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">yum list |grep httpd    //查看有哪些Apache可以安装</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">yum install -y httpd    //安装Apache指令</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">http -v               //安装完成后查看Apache版本指令</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">显示内容如下</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Server version: Apache/2.4.6 (CentOS)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Server built:   Apr 12 2017 21:03:28</span></pre></td></tr></table></figure><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># systemctl systemctl stop firewalld   //关闭防火墙</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># systemctl systemctl status firewalld //查看防火墙状态</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># systemctl systemctl restart httpd    //重启Apache</span></span></pre></td></tr></table></figure><p>如果不想关闭防火墙,那我们可以在防火墙上允许访问80端口(这是Apache默认的端口)</p><h3 id="防火墙上开启80端口"><a href="#防火墙上开启80端口" class="headerlink" title="防火墙上开启80端口"></a>防火墙上开启80端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># firewall-cmd --permanent --zone=public --add-port=80/tcp //开启80端口并且永久生效</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">success</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># firewall-cmd --reload  //重新载入防火墙配置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">success</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># systemctl status firewalld</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"> Active: active (running) since Sun 2017-06-11 13:08:10 CST; 8s ago  //防火墙的状体是开启的</span></pre></td></tr></table></figure><h2 id="Ngixn安装与配置"><a href="#Ngixn安装与配置" class="headerlink" title="Ngixn安装与配置"></a>Ngixn安装与配置</h2><h3 id="Ngixn安装"><a href="#Ngixn安装" class="headerlink" title="Ngixn安装"></a>Ngixn安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># yum search nginx  //搜索没有nginx这个安装包 很遗憾的是没有</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># yum install nginx  //尝试安装</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Loaded plugins: fastestmirror</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Loading mirror speeds from cached hostfile</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"> * base: mirrors.tuna.tsinghua.edu.cn</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"> * extras: mirrors.tuna.tsinghua.edu.cn</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"> * updates: mirrors.tuna.tsinghua.edu.cn</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">No package nginx available.   //还是没有nginx的安装包</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">//将nginx放到yum repro库中</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># yum search nginx  //再次搜索nginx安装包</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">======================================================== N/S matched: nginx =========================================================</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">nginx-debug.x86_64 : debug version of nginx</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">nginx-debuginfo.x86_64 : Debug information <span class="keyword">for</span> package nginx</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">nginx-module-geoip.x86_64 : nginx GeoIP dynamic modules</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">nginx-module-geoip-debuginfo.x86_64 : Debug information <span class="keyword">for</span> package nginx-module-geoip</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">nginx-module-image-filter.x86_64 : nginx image filter dynamic module</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">nginx-module-image-filter-debuginfo.x86_64 : Debug information <span class="keyword">for</span> package nginx-module-image-filter</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">nginx-module-njs.x86_64 : nginx nginScript dynamic modules</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">nginx-module-njs-debuginfo.x86_64 : Debug information <span class="keyword">for</span> package nginx-module-njs</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">nginx-module-perl.x86_64 : nginx Perl dynamic module</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">nginx-module-perl-debuginfo.x86_64 : Debug information <span class="keyword">for</span> package nginx-module-perl</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">nginx-module-xslt.x86_64 : nginx xslt dynamic module</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">nginx-module-xslt-debuginfo.x86_64 : Debug information <span class="keyword">for</span> package nginx-module-xslt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">nginx-nr-agent.noarch : New Relic agent <span class="keyword">for</span> NGINX and NGINX Plus</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">nginx-release-centos.noarch : nginx repo configuration and pgp public keys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">pcp-pmda-nginx.x86_64 : Performance Co-Pilot (PCP) metrics <span class="keyword">for</span> the Nginx Webserver</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">nginx.x86_64 : High performance web server   //是存在nginx安装包的</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># yum install nginx   //安装nginx</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># nginx -v     //查看nginx版本</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">nginx version: nginx/1.12.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># systemctl restart nginx     // 重启nginx</span></span></pre></td></tr></table></figure><p>我希望通过80端口访问的是Apach服务器，通过8080端口访问的是nginx服务器，这么做？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># firewall-cmd --permanent --zone=public --add-port=8080/tcp   </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">success</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># firewall-cmd --reload</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">success</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># firewall-cmd --zone=public --list-ports  //查看所有打开的端口</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">80/tcp 8080/tcp    //80,8080已经打开</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># cd /etc/nginx/conf.d</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">[root@localhost conf.d]<span class="comment"># vim default.conf  //将其中的listen 80;修改为 listen 8080;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">[root@localhost conf.d]<span class="comment"># systemctl restart nginx  //重启nginx</span></span></pre></td></tr></table></figure><h1 id="MySql安装与配置"><a href="#MySql安装与配置" class="headerlink" title="MySql安装与配置"></a>MySql安装与配置</h1><h2 id="Mysql安装"><a href="#Mysql安装" class="headerlink" title="Mysql安装"></a>Mysql安装</h2><p>CetOS7已使用了MariaDB替代了默认的MySQL ,所以我们想使用MySQL还得多做点事情</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># yum install wget      //安装wget</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm    //下载mysql5.7的rpm文件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># yum localinstall mysql57-community-release-el7-8.noarch.rpm    //安装rmp文件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment">#yum install mysql-community-server  //安装MySQL数据库 约190M左右</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># systemctl start mysqld   //启动数据库</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># grep 'temporary password' /var/log/mysqld.log  //查看MySQL数据的原始密码文件 </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">2017-06-11T06:18:16.057811Z 1 [Note] A temporary password is generated <span class="keyword">for</span> root@localhost: uvrpXRuul6/h    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mysql -u root -p     //进入数据库系统</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> password <span class="keyword">for</span> <span class="string">'root'</span>@<span class="string">'localhost'</span>=password(<span class="string">'Aa@123456'</span>); //重新为数据库设置密码</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">Query OK, 0 rows affected, 1 warning (0.01 sec)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">//将MySQL设置为开机启动项</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># systemctl enable mysqld</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># systemctl daemon-reload</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">//设置数据的默认字符集(非必须的)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/my.cnf</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">//将下面两行配置代码加入到my.cnf最后面</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">character_set_server=utf8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">init_connect=<span class="string">'SET NAMES utf8'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl restart mysqld  //重启MySQL</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">//进入MySQL数据库</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">mysql&gt; select version();    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">+-----------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">| version() |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">+-----------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">| 5.7.18    |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">+-----------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'%character%'</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">+--------------------------+----------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">| Variable_name            | Value                      |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">+--------------------------+----------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">| character_set_client     | utf8                       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">| character_set_connection | utf8                       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">| character_set_database   | utf8                       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">| character_set_filesystem | binary                     |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">| character_set_results    | utf8                       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">| character_set_server     | utf8                       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">| character_set_system     | utf8                       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">+--------------------------+----------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span></pre></td></tr></table></figure><h2 id="Mysql修改默认密码"><a href="#Mysql修改默认密码" class="headerlink" title="Mysql修改默认密码"></a>Mysql修改默认密码</h2><p>如果想使用简单密码则需要修改mysql密码验证机制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># grep 'temporary password' /var/log/mysqld.log //默认密码存放位置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mysql -u root -p  //使用获取密码登录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_policy=0;       //只验证长度</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_length=6;      //修改密码长度,默认值是8个字符</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">mysql&gt; alter user user()identified by<span class="string">"123456"</span>;     //修改登陆密码为123456</span></pre></td></tr></table></figure><h1 id="安装PHP7"><a href="#安装PHP7" class="headerlink" title="安装PHP7"></a>安装PHP7</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">//安装依赖文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install gcc-c++ libxml2 libxml2-devel openssl openssl-devel bzip2 bzip2-devel libcurl libcurl-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel gmp gmp-devel libmcrypt libmcrypt-devel readline readline-devel libxslt libxslt-devel</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">//安装php组新版本rpm</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># rpm -Uvh https://mirror.webtatic.com/yum/el7/epel-release.rpm</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Retrieving https://mirror.webtatic.com/yum/el7/epel-release.rpm</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">warning: /var/tmp/rpm-tmp.F1aZTS: Header V4 RSA/SHA1 Signature, key ID 62e74ca5: NOKEY</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Preparing...                          <span class="comment">################################# [100%]</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">Updating / installing...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">   1:epel-release-7-5                 <span class="comment">################################# [100%]</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">Retrieving https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">warning: /var/tmp/rpm-tmp.rnxYY3: Header V4 RSA/SHA1 Signature, key ID 62e74ca5: NOKEY</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">Preparing...                          <span class="comment">################################# [100%]</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">Updating / installing...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">   1:webtatic-release-7-3             <span class="comment">################################# [100%]</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum search php71   //查看有哪些php最新版的安装包文件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install mod_php71w php71w-mysqlnd php71w-cli php71w-fpm   //安装php7最新版</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># php -v    //查看php版本</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">PHP 7.1.5 (cli) (built: May 12 2017 21:54:58) ( NTS )</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">Copyright (c) 1997-2017 The PHP Group</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">Zend Engine v3.1.0, Copyright (c) 1998-2017 Zend Technologies</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl restart httpd    //重启Apache</span></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;lamp环境搭建&lt;br&gt;使用的是centos7系统  &lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="centos" scheme="https://valentj.github.io/categories/centos/"/>
    
    
      <category term="centos" scheme="https://valentj.github.io/tags/centos/"/>
    
      <category term="lamp" scheme="https://valentj.github.io/tags/lamp/"/>
    
  </entry>
  
  <entry>
    <title>网络工程师（一）</title>
    <link href="https://valentj.github.io/2019/10/23/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://valentj.github.io/2019/10/23/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2019-10-23T13:31:39.000Z</published>
    <updated>2019-10-23T13:38:08.673Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note default">            <p>网络工程师<br>持续更新</p>          </div><a id="more"></a><h1 id="常用网络协议神图"><a href="#常用网络协议神图" class="headerlink" title="常用网络协议神图"></a>常用网络协议神图</h1><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://res.cloudinary.com/valent/image/upload/v1571837675/Blog/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B/1_qaysce.jpg" alt=""></h2>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note default&quot;&gt;
            &lt;p&gt;网络工程师&lt;br&gt;持续更新&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="网络工程师" scheme="https://valentj.github.io/categories/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="网络工程师" scheme="https://valentj.github.io/tags/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>算法设计与分析（二）</title>
    <link href="https://valentj.github.io/2019/10/17/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://valentj.github.io/2019/10/17/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2019-10-17T01:37:48.000Z</published>
    <updated>2019-10-17T01:49:22.161Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note default">            <p>算法与设计学习过程<br>坚持更新（使用c++)</p>          </div><a id="more"></a><h1 id="递归算法求解矩阵连乘"><a href="#递归算法求解矩阵连乘" class="headerlink" title="递归算法求解矩阵连乘"></a>递归算法求解矩阵连乘</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">/******************** 递归算法求解 ********************/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">int MatrixChain_Recursive(int i, int j, int *p, int **s)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (i == j)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">return</span> 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    int u = MatrixChain_Recursive(i, i, p, s) + MatrixChain_Recursive(i + 1, j, p, s) + p[i - 1] * p[i] * p[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">   s[i][j]=i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (int k = i+1; k &lt; j; k++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        int tmp = MatrixChain_Recursive(i, k, p, s) + MatrixChain_Recursive(k + 1, j, p, s) + p[i - 1] * p[k] * p[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (tmp &lt; u)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            u = tmp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            s[i][j] = k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">return</span> u;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="动态规划算法"><a href="#动态规划算法" class="headerlink" title="动态规划算法"></a>动态规划算法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">/******************** 动态规划算法 ********************/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">void MatrixChain_Dynamic(int n, int *p, int **m, int **s)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (int i = 1; i &lt;= n; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        m[i][i] = 0;             // l = 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (int r = 2; r &lt;= n; r++) // l is the chain length, 自底向上！</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (int i = 1; i &lt;= n -r + 1; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            int j = r + i - 1;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            m[i][j] = m[i + 1][j] +p[i-1]*p[i]*p[j]; //i,j分别对应矩阵链的首尾</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            s[i][j] = i;                                                       // k = i</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">for</span> (int k = i + 1; k &lt; j; k++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">                int t = m[i][k] + m[k + 1][j] + p[i - 1] * p[k] * p[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">if</span> (t &lt; m[i][j])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">                    m[i][j] = t;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">                    s[i][j] = k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><h1 id="备忘录算法"><a href="#备忘录算法" class="headerlink" title="备忘录算法"></a>备忘录算法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">/******************** 备忘录法 ********************/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">int LookupChain(int i,int j,int *p,int **m,int **s)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (m[i][j] &gt; 0)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">return</span> m[i][j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (i == j)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">return</span> 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    int u = LookupChain(i, i, p, m, s) + LookupChain(i + 1, j, p, m, s) + p[i - 1] * p[i] * p[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    s[i][j]=i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (int k = i+1; k &lt; j; k++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">       int tmp = LookupChain(i, k, p, m, s) + LookupChain(k + 1, j, p, m, s) + p[i - 1] * p[k] * p[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (tmp &lt; u)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            u = tmp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">            s[i][j] = k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    m[i][j] = u;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">return</span> u;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">int MatrixChain_LookUp(int i, int j, int n, int *p, int **m, int **s)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (int p = 1; p &lt;= n; p++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (int q = 1; q &lt;= n; q++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            m[p][q] = 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">return</span> LookupChain(i, j, p, m, s);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="构造最优解算法"><a href="#构造最优解算法" class="headerlink" title="构造最优解算法"></a>构造最优解算法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">/*****************************************构造最优解***********************************************************/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">void Traceback(int i, int j, int **s)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (i == j)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        cout &lt;&lt; <span class="string">"A"</span>&lt;&lt;i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        cout &lt;&lt; <span class="string">"("</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Traceback(i, s[i][j], s);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Traceback(s[i][j] + 1, j, s);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        cout &lt;&lt; <span class="string">")"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">int main()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    int select;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    int p[] = &#123;30,35,15,5,10,20,25&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    int n = sizeof(p) / sizeof(*p) - 1;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    int **m = new int *[n + 1];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    int **s = new int *[n + 1];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (int i = 1; i &lt;= n; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        m[i] = new int[n + 1];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        s[i] = new int[n + 1];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"*********动态规划算法*****\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"******1.动态规划算法******\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"******2.递归算法*********\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"******3.备忘录算法*******\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"*******0.退出************\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"*************************\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"请选择："</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    scanf(<span class="string">"%d"</span>,&amp;select);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>(select=1) &#123; /******************** 动态规划算法********************/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    cout&lt;&lt;<span class="string">"动态规划算法"</span>&lt;&lt;endl;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        cout &lt;&lt; <span class="string">"最优值为："</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">         MatrixChain_Dynamic(n, p, m, s);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">         cout &lt;&lt; m[1][n] &lt;&lt; endl;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">         cout &lt;&lt; m[2][5] &lt;&lt; endl;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(select=2) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        /******************** 递归算法求解 ********************/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        cout&lt;&lt;<span class="string">"递归算法求解"</span>&lt;&lt;endl;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        cout &lt;&lt; <span class="string">"最优值为："</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        cout &lt;&lt; MatrixChain_Recursive(1, n, p, s) &lt;&lt; endl;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        cout &lt;&lt; MatrixChain_Recursive(2, 5, p, s) &lt;&lt; endl;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    &#125; <span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (select=3) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            /******************** 备忘录算法 ********************/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">            cout&lt;&lt;<span class="string">"备忘录算法"</span>&lt;&lt;endl;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">            cout &lt;&lt; <span class="string">"最优值为："</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">            cout &lt;&lt; MatrixChain_LookUp(1, n, n, p, m, s) &lt;&lt; endl;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">            cout &lt;&lt; MatrixChain_LookUp(2, 5, n, p, m, s) &lt;&lt; endl;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(select=0)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">            <span class="built_in">exit</span>(0);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    cout&lt;&lt;<span class="string">"最优解为："</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">    Traceback(1, n, s);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">    cout &lt;&lt; endl;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (int i = 1; i &lt;= n; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        delete[] m[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        delete[] s[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    delete[] m;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    delete[] s;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">return</span> 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note default&quot;&gt;
            &lt;p&gt;算法与设计学习过程&lt;br&gt;坚持更新（使用c++)&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="算法设计与分析" scheme="https://valentj.github.io/categories/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    
    
      <category term="算法设计与分析" scheme="https://valentj.github.io/tags/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>算法设计与分析（一）</title>
    <link href="https://valentj.github.io/2019/09/23/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://valentj.github.io/2019/09/23/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2019-09-23T12:01:40.000Z</published>
    <updated>2019-09-23T12:17:31.159Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note success">            <p>算法与设计学习过程<br>坚持更新（使用JAVA语言）</p>          </div><a id="more"></a><h1 id="递归：实现汉诺塔问题"><a href="#递归：实现汉诺塔问题" class="headerlink" title="递归：实现汉诺塔问题"></a>递归：实现汉诺塔问题</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public class Hannota &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    public static void main(String[] args) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        int N = 3;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        Hanoi(<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, N);      //使用</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    public static void Hanoi(char from, char inter, char to, int  N) &#123;    //方法</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (N == 1)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"移动 1 从 "</span>+ from + <span class="string">" 到 "</span> + to);  //只有一个的情况下 </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        &#125;<span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            Hanoi( from, to, inter, N - 1); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"移动 "</span> + N + <span class="string">" 从 "</span> + from + <span class="string">" 到 "</span> + to);         </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            Hanoi( inter, from, to, N - 1);         </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        &#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="递归：实现排序问题"><a href="#递归：实现排序问题" class="headerlink" title="递归：实现排序问题"></a>递归：实现排序问题</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public class Sort &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">public static int S[] = new int[]&#123;1,2,3&#125;;    //定义一个数组s&#123;1,2,3&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">perm(S,0,S.length-1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">private static void swap(int i1, int i2) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">int temp = S[i2];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">S[i2] = S[i1];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">S[i1] = temp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">public static void perm(int arr[], int begin,int end) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(end==begin)&#123;//一到递归的出口就输出数组，此数组为全排列</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span>(int i=0;i&lt;=end;i++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">System.out.print(arr[i]+<span class="string">" "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">System.out.println();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(int j=begin;j&lt;=end;j++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">swap(begin,j);//<span class="keyword">for</span>循环将begin~end中的每个数放到begin位置中去</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">perm(arr,begin+1,end);//假设begin位置确定，那么对begin+1~end中的数继续递归     //递归</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">swap(begin,j);//换过去后再还原</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="分治：递归实现的快速排序"><a href="#分治：递归实现的快速排序" class="headerlink" title="分治：递归实现的快速排序"></a>分治：递归实现的快速排序</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public class Quicksort &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">/**</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"> * @param args</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"> */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">int[] src = &#123;7, 9, 2, 3, 6, 5, 4, 1, 8, 10&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">System.out.print(<span class="string">"原数组为："</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (int i : src) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">System.out.print(<span class="string">" "</span> + i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">System.out.print(<span class="string">"\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">quickSort(src);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">System.out.print(<span class="string">"现数组为："</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (int i : src) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">System.out.print(<span class="string">" "</span> + i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">/**</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"> * 对整个源数组进行快速排序</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"> * @param src</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"> * @<span class="built_in">return</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"> */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">public static void quickSort(int[] src) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">sortPartision(src, 0, src.length - 1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">/**</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"> * 排序分治区域  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"> * @param src</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"> * @param start</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"> * @param end</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"> */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">private static void sortPartision(int[] src, int start, int end) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">int i = start;    //将开始赋值给i </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">int r = end;         //将结尾赋值给r</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">int x = src[i];       </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (i &lt; r) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (i &lt; r &amp;&amp; src[r] &gt; x) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">r--;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (src[r] &lt; x) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">src[i] = src[r];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">i++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (i &lt; r &amp;&amp; src[i] &lt; x) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">i++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (src[i] &gt; x) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">src[r] = src[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">r--;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">src[i] = x;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">int I = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (I &gt; start) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">sortPartision(src, start, I-1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (I &lt; end) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">sortPartision(src, I+1, end);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="分治：递归实现的合并排序"><a href="#分治：递归实现的合并排序" class="headerlink" title="分治：递归实现的合并排序"></a>分治：递归实现的合并排序</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public class Mergesort &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    static int arr[] = &#123;100, 20, 15, 30, 5, 75, 40, 12, 514&#125;;  //定义排序前的一个是数组</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    public static void main(String args[]) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"数据排序之前 ： "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        // 排序前打印数组</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        printArray(arr, 0, arr.length - 1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"-----------------------------"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        // 用递归实现排序</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        mergeSort(0, arr.length - 1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"-----------------------------"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        // 排序后打印数组</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"排序后打印数组:"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        printArray(arr, 0, arr.length - 1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    /**</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">     * 用于合并排序的递归算法</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">     *</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">     * @param start</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">     * @param end</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">     */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    public static void mergeSort(int start, int end) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        int mid = (start + end) / 2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (start &lt; end) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            // 排序左半部分</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">            mergeSort(start, mid);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">            // 排序右半部分</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            mergeSort(mid + 1, end);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">            // 合并左右两半</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">            merge(start, mid, end);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    /**</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">     * @param start</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">     * @param mid</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">     * @param end</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">     */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    private static void merge(int start, int mid, int end) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        // 初始化临时数组和索引</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        int[] tempArray = new int[arr.length];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        int tempArrayIndex = start;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        System.out.print(<span class="string">"合并前:  "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        printArray(arr, start, end);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">        int startIndex = start;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        int midIndex = mid + 1;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        // 它将迭代直到较小的列表到达结尾</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (startIndex &lt;= mid &amp;&amp; midIndex &lt;= end) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (arr[startIndex] &lt; arr[midIndex]) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">                tempArray[tempArrayIndex++] = arr[startIndex++];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">                tempArray[tempArrayIndex++] = arr[midIndex++];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">        // 复制剩余的元素</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (startIndex &lt;= mid) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">            tempArray[tempArrayIndex++] = arr[startIndex++];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (midIndex &lt;= end) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">            tempArray[tempArrayIndex++] = arr[midIndex++];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">        // 排序后将tempArray复制到实际数组</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (int i = start; i &lt;= end; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">            arr[i] = tempArray[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">        System.out.print(<span class="string">"合并后:   "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">        printArray(tempArray, start, end);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">        System.out.println();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">    /**</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">     * 打印数组</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">     *</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">     * @param arr   传入的数组</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">     * @param start 遍历开始的位置</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">     * @param end   遍历结束的位置</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">     */</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">    public static void printArray(int arr[], int start, int end) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (int i = start; i &lt;= end; i++) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">            System.out.print(arr[i] + <span class="string">" "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">        System.out.println();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success&quot;&gt;
            &lt;p&gt;算法与设计学习过程&lt;br&gt;坚持更新（使用JAVA语言）&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="算法设计与分析" scheme="https://valentj.github.io/categories/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    
    
      <category term="算法设计与分析" scheme="https://valentj.github.io/tags/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习（一）</title>
    <link href="https://valentj.github.io/2019/09/03/Linux%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://valentj.github.io/2019/09/03/Linux%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2019-09-03T12:19:07.000Z</published>
    <updated>2019-12-29T08:29:13.081Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">            <p>Linux学习过程<br>安装kaili系统</p>          </div><a id="more"></a><h1 id="Linux系统安装（vm虚拟机安装）"><a href="#Linux系统安装（vm虚拟机安装）" class="headerlink" title="Linux系统安装（vm虚拟机安装）"></a>Linux系统安装（vm虚拟机安装）</h1><h2 id="IOS镜像下载"><a href="#IOS镜像下载" class="headerlink" title="IOS镜像下载"></a>IOS镜像下载</h2><p>   1.<a href="https://www.linux.org/pages/download/" target="_blank" rel="noopener">官方网站</a>镜像下载（需要翻墙）<br>   2.<a href="https://linux.cn/share/distro/" target="_blank" rel="noopener">Linux中国</a>镜像下载（无需翻墙）<br>   3.或者自己找到镜像网站，进行下载  </p><h2 id="VM虚拟机下载"><a href="#VM虚拟机下载" class="headerlink" title="VM虚拟机下载"></a>VM虚拟机下载</h2><p>   1.<a href="https://my.vmware.com/cn/web/vmware/info/slug/desktop_end_user_computing/vmware_workstation_pro/15_0" target="_blank" rel="noopener">vm15-官网</a>下载<br>   2.下载后自行安装  </p><h2 id="ISO镜像VM安装（此处以kaili-Linux为例）"><a href="#ISO镜像VM安装（此处以kaili-Linux为例）" class="headerlink" title="ISO镜像VM安装（此处以kaili Linux为例）"></a>ISO镜像VM安装（此处以kaili Linux为例）</h2><p>   1.创建新的虚拟机（个人一般选择自定义）<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567515573/Blog/Linux/Linux%28%E4%B8%80%29/Linux1_sdts62.png" alt=""><br>   2.点击下一步<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567516398/Blog/Linux/Linux%28%E4%B8%80%29/Linux2_bkzuhm.png" alt=""><br>   3.没有检测到Linux（选择稍后安装）<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567517856/Blog/Linux/Linux%28%E4%B8%80%29/Linux3_qutwnd.png" alt=""><br>   4.Kaili-Linux选择Deblan (选择你镜像的版本)<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567517856/Blog/Linux/Linux%28%E4%B8%80%29/Linux4_zwrgl3.png" alt=""><br>   5.选择存储位置和名称<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567517856/Blog/Linux/Linux%28%E4%B8%80%29/Linux5_xvcqof.png" alt=""><br>   6.选择适合你的配置<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567517856/Blog/Linux/Linux%28%E4%B8%80%29/Linux6_d8pzbn.png" alt=""><br>   7.根据自己电脑配置，自行选择<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567517856/Blog/Linux/Linux%28%E4%B8%80%29/Linux7_ft0k9y.png" alt=""><br>   8.自行选择（个人选择 桥接模式）<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567517856/Blog/Linux/Linux%28%E4%B8%80%29/Linux8_hbf0rs.png" alt=""><br>   9.默认配置即可<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567517856/Blog/Linux/Linux%28%E4%B8%80%29/Linux9_lbqpzv.png" alt=""><br>   10.默认配置即可<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567517857/Blog/Linux/Linux%28%E4%B8%80%29/Linux10_c7fyoa.png" alt=""><br>   11.创建新的虚拟磁盘即可<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567517857/Blog/Linux/Linux%28%E4%B8%80%29/Linux11_lf6clq.png" alt=""><br>   12.按需求设置<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567517857/Blog/Linux/Linux%28%E4%B8%80%29/Linux12_ceuwcw.png" alt=""><br>   13.配置完成，接下来开始安装  </p><h2 id="开始虚拟系统安装配置"><a href="#开始虚拟系统安装配置" class="headerlink" title="开始虚拟系统安装配置"></a>开始虚拟系统安装配置</h2><p>   1.选择Graphical install(图形安装)<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524302/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-1_sc1ki4.png" alt=""><br>   2.选择系统语言<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524301/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-2_htofwj.png" alt=""><br>   3.选择国家地区<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524303/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-3_qvdbzo.png" alt=""><br>   4.配置键盘<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524302/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-4_zie6qs.png" alt=""><br>   5.输入自己想要的主机名，也可以点击继续跳过<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524302/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-5_eyhe4m.png" alt=""><br>   6.配置域名（可跳过）<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524302/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-6_xxjtnd.png" alt=""><br>   7.设置用户密码<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524303/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-7_hbwxr0.png" alt=""><br>   8.磁盘分区（新手推荐选择第一个）<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524303/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-8_ybtypj.png" alt=""><br>   9.按步骤走<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524304/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-9_weeh6k.png" alt=""><br>   10.按步骤走（可以根据自己的喜好配置）<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524303/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-10_bnpav6.png" alt=""><br>   11.结束分区<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524340/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-11_e2jbrn.png" alt=""><br>   12.确定修改<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524339/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-12_pcftpa.png" alt=""><br>   13.<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524303/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-13_xsmumy.png" alt=""><br>   14.将GRUB安装至硬盘<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524307/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-14_yu1efo.png" alt=""><br>   15.默认设备<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524305/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-15._js0ce4.png" alt=""><br>   16.安装完成<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524306/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-16_p3idkv.png" alt=""><br>   17.用户名初始为root<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524305/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-17_vcpz2b.png" alt=""><br>   18.填入自己之前填的密码<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524306/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-18_er7alo.png" alt=""><br>   19.出现以下界面，则表明系统安装完成<br>     <img src="https://res.cloudinary.com/valent/image/upload/v1567524338/Blog/Linux/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E4%B8%80%EF%BC%892/Linux-19_pujrrp.png" alt=""></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;Linux学习过程&lt;br&gt;安装kaili系统&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://valentj.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://valentj.github.io/tags/Linux/"/>
    
      <category term="操作系统" scheme="https://valentj.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Sandboxie破解</title>
    <link href="https://valentj.github.io/2019/08/22/Sandboxie%E7%A0%B4%E8%A7%A3/"/>
    <id>https://valentj.github.io/2019/08/22/Sandboxie%E7%A0%B4%E8%A7%A3/</id>
    <published>2019-08-22T06:55:08.000Z</published>
    <updated>2019-08-22T08:05:26.073Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note success">            <p>Sandboxie安装及破解<br>仅供学习使用,请支持正版！！！  </p>          </div><a id="more"></a><h2 id="Sandboxie-安装及破解"><a href="#Sandboxie-安装及破解" class="headerlink" title="Sandboxie 安装及破解"></a><center><font size="+2"><span id="post-blue">Sandboxie 安装及破解</span></font></center></h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>   1.点击进入<a href="https://www.sandboxie.com/DownloadSandboxie" target="_blank" rel="noopener">下载界面</a></p><p>   2.点击如下图位置进行下载</p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566457584/Blog/Sandboxie/Sandboxie1_qgzwni.png" alt="">  </p><p>   3.进入我的<a href="https://pan.baidu.com/s/1HRKs9rSNBD_3fg-zEx6hmA" target="_blank" rel="noopener">百度云</a>进行下<span id="post-green">载驱动文件</span>以及<span id="post-yellow">注册机</span>（选择合适驱动文件）</p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566458554/Blog/Sandboxie/Sandboxie2_mpoyuj.png" alt=""> </p><h3 id="安装、破解"><a href="#安装、破解" class="headerlink" title="安装、破解"></a>安装、破解</h3><p>   1.点击安装包进行安装  </p><p>   2.语言随你喜好（可任选） </p><p>   3.选择合适的<span id="post-yellow">安装位置</span>并记住（等会要用到） </p><p>   4.安装完后不要点击下一步，这时候找到我们的<span id="post-green">安装目录</span>，将我们之前下载驱动文件放入根目录,直接进行<span id="post-blue">覆盖</span></p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566458772/Blog/Sandboxie/Sandboxie3_au8ogr.png" alt=""></p><p>   5.弄完上一步后把安装程序接着完成，然后以管理员运行我们之前下载的注册机 </p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566459634/Blog/Sandboxie/Sandboxie4_hop6mc.png" alt=""> </p><p>   6.首先<span id="post-cyan">指定</span>你的安装路径，然后<span id="post-purple">获取</span>你的安装版本，再<span id="post-blue">计算</span>机器码，输入你想要的<span id="post-orange">注册期限</span>,最后点击开始注册即可破解成功！！！  </p><p>   7.以下是我的配置（我现在的是最新版本，安装路径是我自定义的，最后注册期限为2099-08-22 相当于无限使用</p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566460053/Blog/Sandboxie/Sandboxie6_rmmbnb.png" alt=""> </p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566460102/Blog/Sandboxie/Sandboxie5_qrvtbo.png" alt=""> </p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566460054/Blog/Sandboxie/Sandboxie7_xy1qqo.png" alt=""> </p><p>   8.最后进入软件，帮助-&gt;关于 显示注册信息</p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566460355/Blog/Sandboxie/Sandboxie8_fma0nx.png" alt=""> </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success&quot;&gt;
            &lt;p&gt;Sandboxie安装及破解&lt;br&gt;仅供学习使用,请支持正版！！！  &lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="破解" scheme="https://valentj.github.io/categories/%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="Sandboxie破解" scheme="https://valentj.github.io/tags/Sandboxie%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Sublime 3.2.1破解及插件安装</title>
    <link href="https://valentj.github.io/2019/08/20/Sublime-3.2.1%E7%A0%B4%E8%A7%A3/"/>
    <id>https://valentj.github.io/2019/08/20/Sublime-3.2.1%E7%A0%B4%E8%A7%A3/</id>
    <published>2019-08-20T14:08:57.000Z</published>
    <updated>2019-08-22T06:56:18.050Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note success">            <p>Sublime破解及插件安装教程<br>仅供学习使用,请支持正版！！！  </p>          </div><a id="more"></a> <center><font size="+2"><span id="post-blue">Sublime 3.2.1破解及插件安装</span></font></center> <h3 id="下载-安装-激活"><a href="#下载-安装-激活" class="headerlink" title="下载.安装.激活"></a>下载.安装.激活</h3><ol><li><p>下载：点击<a href="http://www.sublimetext.com" target="_blank" rel="noopener">Sublime Text</a>进入官网进行下载/或者进入<a href="https://pan.baidu.com/s/1np_aqT1N-w1Itf0E3Iqpmg" target="_blank" rel="noopener">我的百度云</a>下载—-版本为3.2.1</p></li><li><p>点击安装包进行安装，根据自己的需求安装</p></li><li><p>安装完成后，打开<span id="post-yellow">Sublime</span></p></li><li><p>打开侧边栏：Help -&gt; Enter Lincense 输入以下许可证（3.2.1 目前我正在使用的这个注册码）</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ZYNGA INC.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">50 User License</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">EA7E-811825</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">927BA117 84C9300F 4A0CCBC4 34A56B44</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">985E4562 59F2B63B CCCFF92F 0E646B83</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">0FD6487D 1507AE29 9CC4F9F5 0A6F32E3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">0343D868 C18E2CD5 27641A71 25475648</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">309705B3 E468DDC4 1B766A18 7952D28C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">E627DDBA 960A2153 69A2D98A C87C0607</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">45DC6049 8C04EC29 D18DFA40 442C680B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">1342224D 44D90641 33A3B9F2 46AADB8F</span></pre></td></tr></table></figure><ol start="5"><li>激活完成后显示(表明激活成功！！！)<br><img src="https://res.cloudinary.com/valent/image/upload/v1566374585/Blog/Sublime/sublime1_scajls.png" alt=""></li></ol><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><h4 id="1、安装Package-Control"><a href="#1、安装Package-Control" class="headerlink" title="1、安装Package Control"></a>1、安装Package Control</h4><p>   <span id="post-blue">Package Control</span>为插件管理包，所以我们首先要安装它。有了它，我们就可以很方便的浏览、安装和卸载Sublime Text中的插件。</p><h5 id="方法一：通过Ctrl-快捷键或者View-gt-Show-Console菜单打开控制台，复制粘贴如下代码回车即可。"><a href="#方法一：通过Ctrl-快捷键或者View-gt-Show-Console菜单打开控制台，复制粘贴如下代码回车即可。" class="headerlink" title="方法一：通过Ctrl+`快捷键或者View &gt; Show Console菜单打开控制台，复制粘贴如下代码回车即可。"></a>方法一：通过Ctrl+`快捷键或者View &gt; Show Console菜单打开控制台，复制粘贴如下代码回车即可。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">import urllib.request,os,hashlib; h = <span class="string">'6f4c264a24d933ce70df5dedcf1dcaee'</span> + <span class="string">'ebe013ee18cced0ef93d5f746d80ef60'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).<span class="built_in">read</span>(); dh = hashlib.sha256(by).hexdigest(); <span class="built_in">print</span>(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</span></pre></td></tr></table></figure><h5 id="方法二：Package-Control源文件下载"><a href="#方法二：Package-Control源文件下载" class="headerlink" title="方法二：Package Control源文件下载"></a>方法二：Package Control源文件下载</h5><p>   下载地址：<a href="https://github.com/wbond/package_control" target="_blank" rel="noopener">https://github.com/wbond/package_control</a></p><p>   点击右上角的Clone or download按钮，然后选择Download ZIP</p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566375513/Blog/Sublime/sublime2_t1m4bl.png" alt=""></p><p>   1.将下载的ZIP文件解压，并重命名为Package Control，未重命名或重命名错误则会出现如下错误提示</p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566376245/Blog/Sublime/sublime3_ubv9r9.png" alt=""></p><p>   2.在菜单栏中点击Preferences &gt; Browe Packages…，打开一个文件夹，复制刚才的Package Control文件至此目录下。</p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566376376/Blog/Sublime/sublime4_nmwylz.png" alt=""></p><p>   3.在菜单中点击Preferences，若出现Package Settings和package control选项，就说明安装Package Control成功了。</p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566376376/Blog/Sublime/sublime5_c42pqu.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success&quot;&gt;
            &lt;p&gt;Sublime破解及插件安装教程&lt;br&gt;仅供学习使用,请支持正版！！！  &lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="破解" scheme="https://valentj.github.io/categories/%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="Sublime破解" scheme="https://valentj.github.io/tags/Sublime%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>JET-BRAINS 软件破解</title>
    <link href="https://valentj.github.io/2019/08/19/IntelliJ-%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3/"/>
    <id>https://valentj.github.io/2019/08/19/IntelliJ-%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3/</id>
    <published>2019-08-19T06:59:25.000Z</published>
    <updated>2019-08-23T08:05:37.874Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">            <p>JET-BRAINS 软件破解教程<br>仅供学习使用，请支持正版！！！  </p>          </div><a id="more"></a><h1 id="JET-BRAINS软件永久破解（这里以IDEA为例子）"><a href="#JET-BRAINS软件永久破解（这里以IDEA为例子）" class="headerlink" title="JET-BRAINS软件永久破解（这里以IDEA为例子）"></a>JET-BRAINS软件永久破解（这里以<span id="post-yellow">IDEA</span>为例子）</h1><h2 id="下载安装-2019-2-X版本"><a href="#下载安装-2019-2-X版本" class="headerlink" title="下载安装(2019 2.X版本)"></a>下载安装(2019 2.X版本)</h2><p>  1.进入<a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">官网</a>进行下载IDEA最新版本 </p><p>  2.下载完成后按步骤安装即可  </p><h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><p>   1.进入我的<a href="https://pan.baidu.com/s/1UHxUZzOpaUqk5rx5xwpQ9w" target="_blank" rel="noopener">百度云</a>，下载<span id="post-blue">破解补丁</span></p><p>   2.将破解补丁放在一个没有中文的目录中 如：D:--Code–\JET-BRAINS\JET\jetbrains-agent.jar  (这是我的存放目录)</p><p>   3.进入IDEA的bin目录 分别打开<span id="post-blue">idea.exe.vmoptions</span>、<span id="post-yellow">idea64.exe.vmoptions</span>在最后面添加-javaagent:D:--Code–\JET-BRAINS\JET\jetbrains-agent.jar（后面的路径为你保存破解补丁的位置）   </p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566545071/Blog/JET-BRAINS/IDEA/IDEA_vhbtgw.png" alt=""></p><p>   4.添加完成后进入软件，选择使用<span id="post-blue">Evaluate for free</span></p><p>   5.选择 <span id="post-red">Configure - Edit Custom VM Options</span>，在弹出的窗口确定末尾是刚刚修改的 -javaagent:-javaagent:D:--Code–\JET-BRAINS\JET\jetbrains-agent.jar （如果提示创建，选择是，在末尾再添加上面的参数）</p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566545701/Blog/JET-BRAINS/IDEA/IDEA1_rabkjs.png" alt="">  </p><p>   以下结果显示的，就是我刚刚添加的</p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566545701/Blog/JET-BRAINS/IDEA/IDEA2_esnfvo.png" alt=""></p><p>   6.选择 <span id="post-cyan">Manage License</span>， License Server 填写  <a href="http://jetbrains-license-server" target="_blank" rel="noopener">http://jetbrains-license-server</a>  点击Activate</p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566546375/Blog/JET-BRAINS/IDEA/IDEA3_yejepj.png" alt=""></p><p>   7.重启你的 IDEA ,看下是否已经<span id="post-red">破解成功</span></p><p>   <img src="https://res.cloudinary.com/valent/image/upload/v1566546535/Blog/JET-BRAINS/IDEA/IDEA4_e9tdo9.png" alt=""></p><p>   8.没有显示授权日期，也能正常使用，稳定奔现！！！</p><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p>   1.如果第 6 步提示激活不了的朋友们，打开 Windows 的 hosts 文件，路径一般在 C:\Windows\System32\drivers\etc 下，在末尾加上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">0.0.0.0 account.jetbrains.com</span></pre></td></tr></table></figure><p>   然后保存再点击激活</p><p>   2.其它<span id="post-cyan">JET-BRAINS软件</span>破解也是与IDEA破解步骤一样  </p><h1 id="JetBrains-系列软件汉化包"><a href="#JetBrains-系列软件汉化包" class="headerlink" title="JetBrains 系列软件汉化包"></a>JetBrains 系列软件汉化包</h1><p>   1.进入我的<a href="https://pan.baidu.com/s/1-AmIq6npwTY44wuTJ1v7lg" target="_blank" rel="noopener">百度云</a>下载JetBrains 系列软件汉化包  </p><p>   2.进入JetBrains 软件安装目录的<span id="post-blue">lib</span>目录 </p><p>   3.放入适合你版本的安装包，重启软件，即可汉化完成！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;JET-BRAINS 软件破解教程&lt;br&gt;仅供学习使用，请支持正版！！！  &lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
    
      <category term="破解" scheme="https://valentj.github.io/categories/%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="JET-BRAINS破解" scheme="https://valentj.github.io/tags/JET-BRAINS%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
</feed>
